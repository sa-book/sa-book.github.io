{
  "articles": [
    {
      "path": "about.html",
      "title": "About the authors",
      "author": [],
      "contents": "\r\nMarcel Raab\r\nMarcel is Senior Researcher at the State Institute for Family Research at the University of Bamberg and Deputy Managing Director of the Journal of Family Research. Previously, he worked as a research assistant at the National Educational Panel Study and the Professorship of Demography at the University of Bamberg, as a research fellow in the research group “Demography and Inequality” at the WZB Berlin Social Science Center, and Assistant Professor for Sociology at the University of Mannheim. In 2011, he was a visiting predoctoral fellow at the Center for Research on Inequalities and the Life Course (CIQLE) at Yale University, New Haven, CT. In 2014, he obtained a doctorate in sociology at the University of Bamberg with his dissertation on “Family Effects on Family Formation.” Currently, he is a member of the Advisory Board of the Sequence Analysis Association.\r\n marcelraab.de\r\n\r\nEmanuela Struffolino\r\nEmanuela is Assistant Professor of Economic Sociology at the University of Milan, Department of Social and Political Sciences. Between 2020 and 2021, she was guest Professor of Macrosociology at the Institute of Sociology at the Freie Universität Berlin and then guest Professor of Social Policy at the Humboldt-Universität zu Berlin. From 2015 to 2019, she was a postdoctoral fellow at the research group “Demography and Inequality” research group at the WZB Berlin Social Science Center. After obtaining her PhD in sociology at the University of Milano-Bicocca, in 2014 she worked as a research fellow at the Swiss National Centre for Competence in Research “LIVES—Overcoming Vulnerability: A Life-Course Perspective” at the University of Lausanne. She is a member of the Executive Board of the Sequence Analysis Association.\r\n emanuela-struffolino.com\r\n\r\nBoth authors regularly teach courses and workshops on sequence analysis and have conducted several studies using sequence analysis that have been published in Demography, European Journal of Population, Research in Social Stratification and Mobility, Sociological Methodology, Demographic Research, Advances in Life Course Research, and Social Indicators Research.\r\n\r\n\r\n\r\n",
      "last_modified": "2022-01-26T16:08:02+01:00"
    },
    {
      "path": "index.html",
      "title": "Sequence Analysis",
      "description": "Companion website for the little green book\n",
      "author": [
        {
          "name": "Marcel Raab",
          "url": "https://marcelraab.de/"
        },
        {
          "name": "Emanuela Struffolino",
          "url": "https://emanuela-struffolino.com/"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\r\n\r\n\r\n\r\n\r\nThis site is intended to enhance your use of the book Sequence Analysis by Marcel Raab & Emanuela Struffolino. On this webpage we provide accompanying material illustrating how to conduct sequence analysis in  using TraMineR, TraMineRExtras (Gabadinho et al. 2011)1 , and WeightedCluster (Studer 2013).\r\nPlease note that most of the materials on this site are designed to be used in tandem with the book (which we strongly recommend to buy once it has been published).\r\n\r\n\r\ndiv.green { background-color:#8DCEA4; border-radius: 5px; padding: 20px;}\r\n\r\nNote: This site is under construction! We kindly ask you to cite us anyway, if you use the material shared on this page.\r\n\r\nCitation\r\nFor attribution, please cite this work as:\r\n\r\n\r\nRaab, M. & Struffolino, E. (2022). Sequence Analysis. Thousand Oaks, CA: Sage.\r\n\r\n\r\nBibTeX citation\r\n\r\n@book{raabstruffolino2022,\r\n    author = {Raab, Marcel and Struffolino, Emanuela},\r\n    year = {2022},\r\n    title = {Sequence Analysis},\r\n    series = {Quantitative Applications in the Social Sciences},\r\n    number = {190},\r\n    publisher = {SAGE},\r\n    address = {Thousand Oaks, CA},\r\n    isbn = {9781071801888}\r\n}\r\n\r\n\r\n\r\nGabadinho, Alexis, Gilbert Ritschard, Nicolas S. Müller, and Matthias Studer. 2011. “Analyzing and Visualizing State Sequences in R with TraMineR.” Journal of Statistical Software 40 (4): 1–37. https://doi.org/10.18637/jss.v040.i04.\r\n\r\n\r\nStuder, Matthias. 2013. “WeightedCluster Library Manual: A Practical Guide to Creating Typologies of Trajectories in the Social Sciences with R,” LIVES Working Papers, no. 24. https://doi.org/10.12682/LIVES.2296-1658.2013.24.\r\n\r\n\r\nalso see http://traminer.unige.ch↩︎\r\n",
      "last_modified": "2022-01-26T16:08:03+01:00"
    },
    {
      "path": "rChapter2-0.html",
      "title": "Chapter 02",
      "description": "Defining, Describing, and Visualizing Sequences\n",
      "author": [],
      "date": "`r Sys.Date()`",
      "contents": "\r\nTOC\r\nContent (click for jumping to examples)\r\n2.1 Basic Concepts and Terminology\r\nSequence data formats\r\n2.2 Defining Sequences\r\nSequence length and granularity\r\n2.3 Description of Sequence Data I\r\nBasic Description\r\n2.4 Visualization of Sequence Data\r\nColor palette: Grayscale Edition\r\n\r\nColor palette: Colored Edition\r\n\r\nData summarization graphs (chapter 2.4.1)\r\n\r\nData representation graphs (chapter 2.4.2)\r\n2.5 Description of Sequence Data II\r\nUnidimensional and composite indices\r\n\r\n\r\n\r\nChapter 2 introduces the basic concepts and discusses how to define sequence data. The corresponding material provided on this site shows TraMineR’s capabilites of processing different data formats. We further illustrate how the alphabet and the granularity of sequences can be easily changed with TraMineR’s built-in helper functions.\r\nWith visualization being one of the key features of sequence analysis, we provide extensive material on optimizing the quality of figures by choosing appropriate color palettes. Although we highly recommend using colors for visualizing sequences, the associated print-costs are often prohibitively high (for instance, in the case of our book). We therefore provide some material illustrating how to produce acceptable results by using a grayscale color palette and by adding texture.\r\nWe further show useful commands for a comprehensive description of the sequence data. Finally, we turn to more advanced composite measures of sequence complexity. These indices are not only interesting in themselves, but also because they can be used either as independent or as dependent variable in subsequent regression analyses.\r\n\r\n\r\n\r\n",
      "last_modified": "2022-01-26T16:08:05+01:00"
    },
    {
      "path": "rChapter2-1.html",
      "title": "Defining & printing sequence objects",
      "description": "Chapter 2.1 Basic Concepts and Terminology\n",
      "author": [],
      "contents": "\r\n\r\nContents\r\nDefining a state sequence object\r\nSequence data notation\r\n\r\n\r\n\r\n\r\nIn chapter 2.1, we introduce different notations of sequence data using example data on family biographies from age 18 to 40. The data come from a sub-sample of the German Family Panel - pairfam. For further information on the study and on how to access the full scientific use file see here.\r\nDefining a state sequence object\r\nWe generated the example dataset in Stata. Next to the sequence variables it comprises a few additional variables which will be used to analyze the sequences in later chapters.\r\nWe import the data to R using the read_dta function from the haven package and inspect the names of the imported variables.\r\n\r\n\r\n# import data\r\nfamily <- read_dta(\"PartnerBirthbio.dta\")\r\n\r\n\r\n\r\n\r\n\r\n\r\n# view variable names\r\nnames(family)\r\n\r\n\r\n  [1] \"id\"             \"weight40\"       \"sex\"           \r\n  [4] \"doby_gen\"       \"dob\"            \"ethni\"         \r\n  [7] \"migstatus\"      \"yeduc\"          \"sat1i4\"        \r\n [10] \"sat5\"           \"sat6\"           \"highschool\"    \r\n [13] \"church\"         \"biosib\"         \"stepsib\"       \r\n [16] \"east\"           \"famstructure18\" \"state1\"        \r\n [19] \"state2\"         \"state3\"         \"state4\"        \r\n [22] \"state5\"         \"state6\"         \"state7\"        \r\n [25] \"state8\"         \"state9\"         \"state10\"       \r\n [28] \"state11\"        \"state12\"        \"state13\"       \r\n [31] \"state14\"        \"state15\"        \"state16\"       \r\n [34] \"state17\"        \"state18\"        \"state19\"       \r\n [37] \"state20\"        \"state21\"        \"state22\"       \r\n [40] \"state23\"        \"state24\"        \"state25\"       \r\n [43] \"state26\"        \"state27\"        \"state28\"       \r\n [46] \"state29\"        \"state30\"        \"state31\"       \r\n [49] \"state32\"        \"state33\"        \"state34\"       \r\n [52] \"state35\"        \"state36\"        \"state37\"       \r\n [55] \"state38\"        \"state39\"        \"state40\"       \r\n [58] \"state41\"        \"state42\"        \"state43\"       \r\n [61] \"state44\"        \"state45\"        \"state46\"       \r\n [64] \"state47\"        \"state48\"        \"state49\"       \r\n [67] \"state50\"        \"state51\"        \"state52\"       \r\n [70] \"state53\"        \"state54\"        \"state55\"       \r\n [73] \"state56\"        \"state57\"        \"state58\"       \r\n [76] \"state59\"        \"state60\"        \"state61\"       \r\n [79] \"state62\"        \"state63\"        \"state64\"       \r\n [82] \"state65\"        \"state66\"        \"state67\"       \r\n [85] \"state68\"        \"state69\"        \"state70\"       \r\n [88] \"state71\"        \"state72\"        \"state73\"       \r\n [91] \"state74\"        \"state75\"        \"state76\"       \r\n [94] \"state77\"        \"state78\"        \"state79\"       \r\n [97] \"state80\"        \"state81\"        \"state82\"       \r\n[100] \"state83\"        \"state84\"        \"state85\"       \r\n[103] \"state86\"        \"state87\"        \"state88\"       \r\n[106] \"state89\"        \"state90\"        \"state91\"       \r\n[109] \"state92\"        \"state93\"        \"state94\"       \r\n[112] \"state95\"        \"state96\"        \"state97\"       \r\n[115] \"state98\"        \"state99\"        \"state100\"      \r\n[118] \"state101\"       \"state102\"       \"state103\"      \r\n[121] \"state104\"       \"state105\"       \"state106\"      \r\n[124] \"state107\"       \"state108\"       \"state109\"      \r\n[127] \"state110\"       \"state111\"       \"state112\"      \r\n[130] \"state113\"       \"state114\"       \"state115\"      \r\n[133] \"state116\"       \"state117\"       \"state118\"      \r\n[136] \"state119\"       \"state120\"       \"state121\"      \r\n[139] \"state122\"       \"state123\"       \"state124\"      \r\n[142] \"state125\"       \"state126\"       \"state127\"      \r\n[145] \"state128\"       \"state129\"       \"state130\"      \r\n[148] \"state131\"       \"state132\"       \"state133\"      \r\n[151] \"state134\"       \"state135\"       \"state136\"      \r\n[154] \"state137\"       \"state138\"       \"state139\"      \r\n[157] \"state140\"       \"state141\"       \"state142\"      \r\n[160] \"state143\"       \"state144\"       \"state145\"      \r\n[163] \"state146\"       \"state147\"       \"state148\"      \r\n[166] \"state149\"       \"state150\"       \"state151\"      \r\n[169] \"state152\"       \"state153\"       \"state154\"      \r\n[172] \"state155\"       \"state156\"       \"state157\"      \r\n[175] \"state158\"       \"state159\"       \"state160\"      \r\n[178] \"state161\"       \"state162\"       \"state163\"      \r\n[181] \"state164\"       \"state165\"       \"state166\"      \r\n[184] \"state167\"       \"state168\"       \"state169\"      \r\n[187] \"state170\"       \"state171\"       \"state172\"      \r\n[190] \"state173\"       \"state174\"       \"state175\"      \r\n[193] \"state176\"       \"state177\"       \"state178\"      \r\n[196] \"state179\"       \"state180\"       \"state181\"      \r\n[199] \"state182\"       \"state183\"       \"state184\"      \r\n[202] \"state185\"       \"state186\"       \"state187\"      \r\n[205] \"state188\"       \"state189\"       \"state190\"      \r\n[208] \"state191\"       \"state192\"       \"state193\"      \r\n[211] \"state194\"       \"state195\"       \"state196\"      \r\n[214] \"state197\"       \"state198\"       \"state199\"      \r\n[217] \"state200\"       \"state201\"       \"state202\"      \r\n[220] \"state203\"       \"state204\"       \"state205\"      \r\n[223] \"state206\"       \"state207\"       \"state208\"      \r\n[226] \"state209\"       \"state210\"       \"state211\"      \r\n[229] \"state212\"       \"state213\"       \"state214\"      \r\n[232] \"state215\"       \"state216\"       \"state217\"      \r\n[235] \"state218\"       \"state219\"       \"state220\"      \r\n[238] \"state221\"       \"state222\"       \"state223\"      \r\n[241] \"state224\"       \"state225\"       \"state226\"      \r\n[244] \"state227\"       \"state228\"       \"state229\"      \r\n[247] \"state230\"       \"state231\"       \"state232\"      \r\n[250] \"state233\"       \"state234\"       \"state235\"      \r\n[253] \"state236\"       \"state237\"       \"state238\"      \r\n[256] \"state239\"       \"state240\"       \"state241\"      \r\n[259] \"state242\"       \"state243\"       \"state244\"      \r\n[262] \"state245\"       \"state246\"       \"state247\"      \r\n[265] \"state248\"       \"state249\"       \"state250\"      \r\n[268] \"state251\"       \"state252\"       \"state253\"      \r\n[271] \"state254\"       \"state255\"       \"state256\"      \r\n[274] \"state257\"       \"state258\"       \"state259\"      \r\n[277] \"state260\"       \"state261\"       \"state262\"      \r\n[280] \"state263\"       \"state264\"      \r\n\r\n\r\n \r\nThe sequence variables begin with the prefix state. The data comprise 264 sequence variables per person (wide data format). These variables include monthly information on family biographies covering a period of 22 years. Haven imports them as numeric variables with labels attached to them (class = \"haven_labelled\"). With the follwing commands we can take a look at the labels.\r\n\r\n\r\nstr(family$state1) \r\n\r\n\r\n dbl+lbl [1:1866] 5, 1, 5, 1, 3, 3, 1, 3, 1, 1, 1, 1, 1, 3, 1, 1,...\r\n @ format.stata: chr \"%22.0g\"\r\n @ labels      : Named num [1:9] 1 2 3 4 5 6 7 8 9\r\n  ..- attr(*, \"names\")= chr [1:9] \"Single, no child\" \"Single, child(ren)\" \"LAT, no child\" \"LAT, child(ren)\" ...\r\n\r\nattributes(family$state1)$labels\r\n\r\n\r\n      Single, no child     Single, child(ren)          LAT, no child \r\n                     1                      2                      3 \r\n       LAT, child(ren)   Cohabiting, no child Cohabiting, child(ren) \r\n                     4                      5                      6 \r\n     Married, no child       Married, 1 child   Married, 2+ children \r\n                     7                      8                      9 \r\n\r\nThe first examples in the book are based on sequences with a reduced alphabet only distinguishing partnership states. The following code generates a data set (seqvars.partner) containing the recoded sequence variables using dplyr.\r\n\r\n\r\n# extracting and recoding the sequence variables (which all start with state)\r\n# recode to reduced state space capturing partnership status only \r\nseqvars.partner <- family %>%\r\n  select(starts_with(\"state\")) %>%\r\n  mutate_all(~(case_when(\r\n    . < 3 ~ 1,            # Single\r\n    . %in% c(3,4) ~ 2,    # LAT\r\n    . %in% c(5,6) ~ 3,    # Cohabiting\r\n    . > 6 ~ 4,)))         # Married\r\n\r\n\r\n\r\nThen we define two vectors storing the long and short labels for the states in the newly defined alphabet. Once that is done, we can define the data as a state sequence object. Most TraMineR functions for analyzing sequences require the data to have this format.\r\n\r\n\r\nshortlab.partner <- c(\"S\", \"LAT\", \"COH\", \"MAR\")\r\nlonglab.partner <-  c(\"Single\", \"LAT\", \"Cohabiting\", \"Married\")\r\n\r\n# create state sequence object\r\npartner.month.seq <- seqdef(seqvars.partner,\r\n                            labels = longlab.partner,\r\n                            states = shortlab.partner,\r\n                            weights = family$weight40)\r\n\r\n\r\n\r\nNote that the seqdef function can include many more optional arguments. Some of these arguments - most importantly cpal - affect the appearance of state sequence plots rendered with seqplot or seqplot.rf. We cover the definition of color palettes on two separate pages (definition of color palettes; definition of grayscale palettes)\r\n \r\nSequence data notation\r\nIn chapter 2.1, we introduce different notations for printing sequences. The following commands print the sequences in STS, DSS, and SPS format.\r\n\r\n\r\nprint(partner.month.seq[8, ], format = \"STS\")\r\n\r\n\r\n  Sequencer\nr\n\r\nseqdss(partner.month.seq[8, ])\r\n\r\n\r\n  Sequence                     \r\n8 LAT-S-LAT-S-LAT-S-LAT-COH-MAR\r\n\r\nprint(partner.month.seq[8, ], format = \"SPS\")\r\n\r\n\r\n  Sequence                                                                 \r\n8 (LAT,13)-(S,6)-(LAT,33)-(S,24)-(LAT,41)-(S,35)-(LAT,10)-(COH,14)-(MAR,88)\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2022-01-26T16:08:11+01:00"
    },
    {
      "path": "rChapter2-2.html",
      "title": "Sequence length and granularity",
      "description": "Chapter 2.2 Defining sequences\n",
      "author": [],
      "contents": "\r\n\r\n\r\n\r\nTable 2.2 in Chapter 2.2 compares different approaches towards defining sequence data.\r\nThe sequences consist of monthly information on respondents’ partnership status between age 18 to 40 (monthly data). The sequences are stored in the object partner.month.seq and distinguish four states:\r\n\r\n\r\nState\r\n\r\n\r\nShort Label\r\n\r\n\r\nSingle\r\n\r\n\r\nS\r\n\r\n\r\nLAT\r\n\r\n\r\nLAT\r\n\r\n\r\nCohabiting\r\n\r\n\r\nCOH\r\n\r\n\r\nMarried\r\n\r\n\r\nMAR\r\n\r\n\r\nIn addition to simply using the original data, two alternative approaches of defining the sequences are discussed:\r\nThe first alternative aims at reducing the complexity of the original data by imposing a threshold rule that defines a minimum length for partnership spells. If a spell falls below this threshold value, it would be discounted and the respective states coded as being single rather than in a relationship. The data manipulation required for this alternative sequence specification was done in Stata. Hence, we only have to import the dataset from Stata and define it a sequence object using similar code than in Chapter 2-1.\r\n\r\n\r\n# import alternative version of sequence data \r\nfamily2 <- read_dta(\"partnerRecodedThreshold12.dta\")\r\n\r\n# store sequence variables in a separate object\r\nseqvars2.partner <- family2 %>%\r\n  select(starts_with(\"state\"))\r\n\r\n# define long and short labels\r\nshortlab.partner <- c(\"S\", \"LAT\", \"COH\", \"MAR\")\r\nlonglab.partner <-  c(\"Single\", \"LAT\", \"Cohabiting\", \"Married\")\r\n\r\n# define sequence object using monthly data\r\npartner.month.seq2 <- seqdef(seqvars2.partner,\r\n                             states = shortlab.partner,\r\n                             labels = longlab.partner,\r\n                             weights = family2$weight40)\r\n\r\n\r\n\r\nThe second strategy changes the granularity of the sequence data from monthly to yearly. That is, twelve states from the original sequence are condensed to one state in the new sequence by applying the seqgranularity function from the TraMineRextras package.\r\n\r\n\r\n# change granularity --> years instead of months (using modal values)\r\npartner.year.seq <- seqgranularity(partner.month.seq, \r\n                               tspan=12, method=\"mostfreq\")\r\n\r\n\r\n\r\nNow we can produce Table 2.2 from the book which shows a small selction of four sequences using the three different specifications.\r\n\r\n\r\n# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n# Table 2.2 - Different alternatives of defining sequences ----\r\n# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n# Using original Sequence data (monthly granularity) (column 1)\r\ncol1 <- print(partner.month.seq[c(4, 8, 16, 21), ], format = \"SPS\")\r\n\r\n# Using recoded monthly data only considering\r\n# spells lasting at least 12 months (column 2)\r\ncol2 <- print(partner.month.seq2[c(4, 8, 16, 21), ], format = \"SPS\")\r\n\r\n# Using sequences with yearly granularity (Column 3)\r\ncol3 <- print(partner.year.seq[c(4, 8, 16, 21), ], format = \"SPS\")\r\n\r\n\r\n\r\n\r\n\r\n# Print selection of sequences from differently specified sequence data\r\ntibble(col1, col2, col3) %>%\r\n  kable(col.names = c(\"Original sequence\", \r\n                      \"Strategy 1 – recode\", \r\n                      \"Strategy 2 – aggregate\")) %>%\r\n  kable_styling(bootstrap_options = \r\n                  c(\"striped\", \"hover\", \"condensed\", \"responsive\"))\r\n\r\n\r\n\r\nOriginal sequence\r\n\r\n\r\nStrategy 1 – recode\r\n\r\n\r\nStrategy 2 – aggregate\r\n\r\n\r\n(S,89)-(LAT,26)-(COH,14)-(LAT,6)-(S,34)-(LAT,4)-(MAR,91)\r\n\r\n\r\n(S,89)-(LAT,26)-(COH,14)-(S,44)-(MAR,91)\r\n\r\n\r\n(S,7)-(LAT,3)-(COH,1)-(S,3)-(MAR,8)\r\n\r\n\r\n(LAT,13)-(S,6)-(LAT,33)-(S,24)-(LAT,41)-(S,35)-(LAT,10)-(COH,14)-(MAR,88)\r\n\r\n\r\n(LAT,13)-(S,6)-(LAT,33)-(S,24)-(LAT,41)-(S,45)-(COH,14)-(MAR,88)\r\n\r\n\r\n(LAT,1)-(S,1)-(LAT,2)-(S,2)-(LAT,4)-(S,3)-(LAT,1)-(COH,1)-(MAR,7)\r\n\r\n\r\n(S,56)-(LAT,69)-(COH,47)-(MAR,92)\r\n\r\n\r\n(S,56)-(LAT,69)-(COH,47)-(MAR,92)\r\n\r\n\r\n(S,5)-(LAT,5)-(COH,4)-(MAR,8)\r\n\r\n\r\n(LAT,4)-(S,134)-(LAT,9)-(COH,3)-(MAR,52)-(LAT,5)-(COH,25)-(MAR,32)\r\n\r\n\r\n(S,150)-(MAR,52)-(S,5)-(COH,25)-(MAR,32)\r\n\r\n\r\n(S,12)-(MAR,5)-(COH,2)-(MAR,3)\r\n\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2022-01-26T16:08:14+01:00"
    },
    {
      "path": "rChapter2-3.html",
      "title": "Describing & summarising sequence data",
      "description": "Chapter 2.3 Description of Sequence Data I: The Basics\n",
      "author": [],
      "contents": "\r\n\r\nContents\r\nTime spent in different states & occurence of episodes\r\nNumber of transitions & transition matrix\r\nState distribution at different positions (cross-sectional perspective)\r\nModal and representative sequences\r\n\r\n\r\n\r\n\r\nWe use a simple alphabet differentiating four partnership states to illustrate TraMineR’s capabilities of producing simple descriptive statistics on our sequence data. The sequences cover the partnership biographies from age 18 to 40 (monthly data). The sequences are stored in the object partner.month.seq.\r\n\r\n\r\nState\r\n\r\n\r\nShort Label\r\n\r\n\r\nSingle\r\n\r\n\r\nS\r\n\r\n\r\nLAT\r\n\r\n\r\nLAT\r\n\r\n\r\nCohabiting\r\n\r\n\r\nCOH\r\n\r\n\r\nMarried\r\n\r\n\r\nMAR\r\n\r\n\r\n \r\nTime spent in different states & occurence of episodes\r\nThe function seqmeant computes the mean total time spent in each state of the alphabet. The arguments serr = TRUE and prop = TRUE provide standard errors and relative frequencies instead of the average number of months spent in each state.\r\n\r\n\r\nseqmeant(partner.month.seq, serr = TRUE)\r\nseqmeant(partner.month.seq, prop = TRUE)\r\n\r\n\r\n\r\nWe also can use seqmeant to identify the average number of episodes for each state of the alphabet by applying it to a sequence data object in the DSS format.\r\n\r\n\r\nseqmeant(seqdss(partner.month.seq),serr = TRUE)\r\n\r\n\r\n\r\nTaken together these commands yield the results shown in Table 2.3.\r\n\r\n\r\n\r\n\r\n\r\nTime spent in months\r\n\r\n\r\n\r\n\r\nNumber of episodes\r\n\r\n\r\n\r\nState\r\n\r\n\r\nMean\r\n\r\n\r\nSD\r\n\r\n\r\nrelative freq.\r\n\r\n\r\nMean\r\n\r\n\r\nSD\r\n\r\n\r\nS\r\n\r\n\r\n72.5\r\n\r\n\r\n69.8\r\n\r\n\r\n0.27\r\n\r\n\r\n1.6\r\n\r\n\r\n1.2\r\n\r\n\r\nLAT\r\n\r\n\r\n48.0\r\n\r\n\r\n43.9\r\n\r\n\r\n0.18\r\n\r\n\r\n1.8\r\n\r\n\r\n1.3\r\n\r\n\r\nCOH\r\n\r\n\r\n48.6\r\n\r\n\r\n53.3\r\n\r\n\r\n0.18\r\n\r\n\r\n1.0\r\n\r\n\r\n0.8\r\n\r\n\r\nMAR\r\n\r\n\r\n95.0\r\n\r\n\r\n78.9\r\n\r\n\r\n0.36\r\n\r\n\r\n0.8\r\n\r\n\r\n0.5\r\n\r\n\r\nNumber of transitions & transition matrix\r\nThe person-specific number of transitions between states can be obtained by seqtransn. However, we are usually interested in the average number of transitions. We use wtd.mean and wtd.var from the Hmisc package to compute the weighted mean and standard deviation. The weights are stored in the variable weight40 of the data frame family which served as source for generating the sequence object partner.month.seq.\r\n\r\n\r\nwtd.mean(seqtransn(partner.month.seq), family$weight40)\r\nsqrt(wtd.var(seqtransn(partner.month.seq), family$weight40))\r\n\r\n\r\n\r\nWe did the same computation for the sequence object partner.year.seq which comes with a yearly instead of a monthly granularity (see chapter 2.2).\r\n\r\n\r\nGranularity\r\n\r\n\r\nMean\r\n\r\n\r\nSD\r\n\r\n\r\nMonthly data\r\n\r\n\r\n4.3\r\n\r\n\r\n2.6\r\n\r\n\r\nYearly data\r\n\r\n\r\n3.3\r\n\r\n\r\n1.9\r\n\r\n\r\nTransition rates between states can be computed by using seqtrate. Again, we display the transitions rates using sequences with monthly and yearly granularity (partner.month.seq and partner.year.seq). It is also possible to calculate transitions rates at specific positions of the sequence by typing time.varying = TRUE. This option is also used for generating the animated illustration below (Table 2-4).\r\n\r\n\r\nseqtrate(partner.month.seq)\r\nseqtrate(partner.year.seq)\r\n\r\n\r\n\r\n\r\n\r\n\r\nMonthly granularity\r\n\r\n\r\n\r\n\r\n\r\n\r\nState at t+1\r\n\r\n\r\n\r\nState at t\r\n\r\n\r\nS\r\n\r\n\r\nLAT\r\n\r\n\r\nCOH\r\n\r\n\r\nMAR\r\n\r\n\r\nS\r\n\r\n\r\n0.98\r\n\r\n\r\n0.02\r\n\r\n\r\n0.00\r\n\r\n\r\n0.00\r\n\r\n\r\nLAT\r\n\r\n\r\n0.02\r\n\r\n\r\n0.96\r\n\r\n\r\n0.02\r\n\r\n\r\n0.00\r\n\r\n\r\nCOH\r\n\r\n\r\n0.00\r\n\r\n\r\n0.00\r\n\r\n\r\n0.98\r\n\r\n\r\n0.01\r\n\r\n\r\nMAR\r\n\r\n\r\n0.00\r\n\r\n\r\n0.00\r\n\r\n\r\n0.00\r\n\r\n\r\n1.00\r\n\r\n\r\n\r\nYearly granularity\r\n\r\n\r\n\r\n\r\n\r\n\r\nState at t+1\r\n\r\n\r\n\r\nState at t\r\n\r\n\r\nS\r\n\r\n\r\nLAT\r\n\r\n\r\nCOH\r\n\r\n\r\nMAR\r\n\r\n\r\nS\r\n\r\n\r\n0.81\r\n\r\n\r\n0.14\r\n\r\n\r\n0.04\r\n\r\n\r\n0.01\r\n\r\n\r\nLAT\r\n\r\n\r\n0.12\r\n\r\n\r\n0.68\r\n\r\n\r\n0.16\r\n\r\n\r\n0.04\r\n\r\n\r\nCOH\r\n\r\n\r\n0.04\r\n\r\n\r\n0.02\r\n\r\n\r\n0.80\r\n\r\n\r\n0.14\r\n\r\n\r\nMAR\r\n\r\n\r\n0.01\r\n\r\n\r\n0.01\r\n\r\n\r\n0.00\r\n\r\n\r\n0.98\r\n\r\n\r\nAdditional insights can be gained by using sequence data stored in the DSS format. A computation based on this format provides transition rates between episodes of distinct states. Note, that we only use monthly sequence data for this exercise in order to keep track of short lasting spells which might be obscured in the yearly data (Table 2-5).\r\n\r\n\r\nseqtrate(seqdss(partner.month.seq))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nState at t+1\r\n\r\n\r\n\r\nState at t\r\n\r\n\r\nS\r\n\r\n\r\nLAT\r\n\r\n\r\nCOH\r\n\r\n\r\nMAR\r\n\r\n\r\nS\r\n\r\n\r\n0.00\r\n\r\n\r\n0.91\r\n\r\n\r\n0.07\r\n\r\n\r\n0.02\r\n\r\n\r\nLAT\r\n\r\n\r\n0.42\r\n\r\n\r\n0.00\r\n\r\n\r\n0.50\r\n\r\n\r\n0.08\r\n\r\n\r\nCOH\r\n\r\n\r\n0.20\r\n\r\n\r\n0.12\r\n\r\n\r\n0.00\r\n\r\n\r\n0.68\r\n\r\n\r\nMAR\r\n\r\n\r\n0.44\r\n\r\n\r\n0.46\r\n\r\n\r\n0.11\r\n\r\n\r\n0.00\r\n\r\n\r\nState distribution at different positions (cross-sectional perspective)\r\nAmong other things seqstatd computes the distribution of states at each position in the sequence. Usually this information is displayed in a graphical fashion (state distribution plot) rather than as a descriptive table.\r\nUsually the tabular presentation of the state distribution requires to extract the distribution for a selection of (meaningful) positions of the sequence. In the example below we display the distribution at age 18, 20, 24, 28, 32, 36, and 40. Note that time is measured in months. Hence, we do not extract the descriptives at positions 1 and 3 but at positions 1 and 24 to obtain the state distribution at age 18 and 20 (Table 2-6).\r\n\r\n\r\nseqstatd(partner.month.seq)$Frequencies[,c(1, seq(24, 264, by = 48))]\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nState distribution at age\r\n\r\n\r\n\r\nState\r\n\r\n\r\n18\r\n\r\n\r\n20\r\n\r\n\r\n24\r\n\r\n\r\n28\r\n\r\n\r\n32\r\n\r\n\r\n36\r\n\r\n\r\n40\r\n\r\n\r\nS\r\n\r\n\r\n0.65\r\n\r\n\r\n0.52\r\n\r\n\r\n0.36\r\n\r\n\r\n0.25\r\n\r\n\r\n0.18\r\n\r\n\r\n0.15\r\n\r\n\r\n0.14\r\n\r\n\r\nLAT\r\n\r\n\r\n0.31\r\n\r\n\r\n0.32\r\n\r\n\r\n0.25\r\n\r\n\r\n0.17\r\n\r\n\r\n0.12\r\n\r\n\r\n0.10\r\n\r\n\r\n0.05\r\n\r\n\r\nCOH\r\n\r\n\r\n0.03\r\n\r\n\r\n0.11\r\n\r\n\r\n0.23\r\n\r\n\r\n0.25\r\n\r\n\r\n0.22\r\n\r\n\r\n0.15\r\n\r\n\r\n0.13\r\n\r\n\r\nMAR\r\n\r\n\r\n0.01\r\n\r\n\r\n0.05\r\n\r\n\r\n0.17\r\n\r\n\r\n0.33\r\n\r\n\r\n0.48\r\n\r\n\r\n0.60\r\n\r\n\r\n0.68\r\n\r\n\r\nThe following code extracts the corresponding cross-sectional values of the Shannon entropy for the same time points (Table 2-7).\r\n\r\n\r\nseqstatd(partner.month.seq)$Entropy[c(1, seq(24, 264, by = 48))]\r\n\r\n\r\n\r\n\r\n\r\n\r\nShannon entropy at age …\r\n\r\n\r\n\r\n18\r\n\r\n\r\n20\r\n\r\n\r\n24\r\n\r\n\r\n28\r\n\r\n\r\n32\r\n\r\n\r\n36\r\n\r\n\r\n40\r\n\r\n\r\n0.58\r\n\r\n\r\n0.78\r\n\r\n\r\n0.97\r\n\r\n\r\n0.98\r\n\r\n\r\n0.9\r\n\r\n\r\n0.8\r\n\r\n\r\n0.69\r\n\r\n\r\nAt age 28 the states are most evenly distributed. As a result the enropy value is highest at this age.\r\nFinally, the seqstatd function can also be used to figure out how many cases never spent any time in specific states.\r\n\r\n\r\nas_tibble(seqistatd(partner.month.seq)) %>%\r\n  mutate_all(~case_when(. == 0 ~ 1,\r\n                        TRUE ~ 0)) %>%\r\n  summarise_all(~(weighted.mean(., w = family$weight40)))  \r\n\r\n\r\n\r\n\r\n\r\nS\r\n\r\n\r\nLAT\r\n\r\n\r\nCOH\r\n\r\n\r\nMAR\r\n\r\n\r\n0.12\r\n\r\n\r\n0.07\r\n\r\n\r\n0.22\r\n\r\n\r\n0.25\r\n\r\n\r\nAccording to the monthly partnership data 25% of the sample did not spend a single month in wedlock. Another 12% never were observed outside some sort of partnership.\r\nModal and representative sequences\r\nThe distribution above indicates the dominance of the partnership states “Single” and “Married” at the beginning and ending of the sequence. This is also reflected in the sequence of modal states. The following commands extract the modal sequences using sequence data with monthly and yearly granularity (see chapter 2.2).\r\n\r\n\r\nmodal.month.seq <- seqdef(as_tibble(seqmodst(partner.month.seq)))\r\nprint(modal.month,seq, format = \"SPS\")\r\n\r\nmodal.year.seq <- seqdef(as_tibble(seqmodst(partner.year.seq)))\r\nprint(modal.year.seq, format = \"SPS\")\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nGranularity\r\n\r\n\r\nModal Sequence\r\n\r\n\r\nMonthly data\r\n\r\n\r\n(S,102)-(MAR,162)\r\n\r\n\r\nYearly data\r\n\r\n\r\n(S,9)-(MAR,13)\r\n\r\n\r\nUsually the modal sequence is a hypothetical sequence that is not actually observed in the data. In contrast, seqrep aims at identifying those sequences that represent the data best. Note that this approach requires the computation of a distance matrix. The following commands illustrate the identification of representative sequences using yearly sequences (partner.year.seq). For details on computing sequence distances (seqdist) see Chapter 3.\r\n\r\n\r\npartner.year.om <- seqdist(partner.year.seq, \r\n                           method=\"OM\", sm=\"CONSTANT\")\r\n\r\npartner.year.rep <- seqrep(partner.year.seq, \r\n                           diss = partner.year.om, \r\n                           criterion=\"density\")\r\n\r\n\r\n\r\nThe following command prints the sequences in the more accessible SPS format.\r\n\r\n\r\nprint(partner.year.seq[attributes(partner.year.rep)$Index,], format = \"SPS\")\r\n\r\n\r\n\r\nDescriptive statistics on the quality of the representative Sequence are stored in attributes(partner.year.rep)$Statistics. These can be easily accessed by typing:\r\n\r\n\r\nsummary(partner.year.rep)\r\n\r\n\r\n\r\nThe table below presents a set of representative sequences (SPS format) and the corresponding coverage statistics. In addition, it shows how many cases are (more or less) represented by each the extracted sequences (Table 2-8):\r\n\r\n\r\n\r\n\r\n\r\nSequence\r\n\r\n\r\nCoverage(in %)\r\n\r\n\r\nAssigned(in %)\r\n\r\n\r\n(S,1)-(LAT,2)-(MAR,19)\r\n\r\n\r\n5.7\r\n\r\n\r\n6.5\r\n\r\n\r\n(S,20)-(MAR,2)\r\n\r\n\r\n4.4\r\n\r\n\r\n25.2\r\n\r\n\r\n(S,4)-(LAT,1)-(COH,1)-(MAR,16)\r\n\r\n\r\n3.8\r\n\r\n\r\n5.3\r\n\r\n\r\n(LAT,3)-(COH,2)-(MAR,17)\r\n\r\n\r\n3.1\r\n\r\n\r\n11.4\r\n\r\n\r\n(S,2)-(LAT,2)-(COH,3)-(MAR,15)\r\n\r\n\r\n2.7\r\n\r\n\r\n17.1\r\n\r\n\r\n(S,5)-(LAT,2)-(COH,2)-(MAR,13)\r\n\r\n\r\n2.7\r\n\r\n\r\n23.5\r\n\r\n\r\n(COH,2)-(MAR,20)\r\n\r\n\r\n2.6\r\n\r\n\r\n3.0\r\n\r\n\r\n(S,1)-(LAT,5)-(MAR,16)\r\n\r\n\r\n2.3\r\n\r\n\r\n8.0\r\n\r\n\r\nTotal Coverage\r\n\r\n\r\n27.5\r\n\r\n\r\n100.0\r\n\r\n\r\nFinally, we conclude this chapter by identifying the medoid sequences of women and men using TraMineRextras’s seqrep.grp-function which allows to extract representative sequences for different subgroups.\r\n\r\n\r\npartner.year.sex.rep <- seqrep.grp(partner.year.seq,\r\n                                   group = family$sex,\r\n                                   diss=partner.year.om,\r\n                                   criterion=\"dist\",\r\n                                   nrep=1,\r\n                                   ret = \"both\")\r\n\r\n# Medoid & coverage - men (family$sex = 0 = male)\r\nprint(partner.year.sex.rep[[1]]$` 0`, format = \"SPS\")\r\nsummary(partner.year.sex.rep[[1]]$` 0`)\r\n\r\n# Medoid & coverage - women (family$sex = 1 = female)\r\nprint(partner.year.sex.rep[[1]]$` 1`, format = \"SPS\")\r\nsummary(partner.year.sex.rep[[1]]$` 1`)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nSex\r\n\r\n\r\nSequence\r\n\r\n\r\nCoverage(in %)\r\n\r\n\r\nFemale\r\n\r\n\r\n(S,3)-(LAT,2)-(COH,4)-(MAR,13)\r\n\r\n\r\n3.38\r\n\r\n\r\nMale\r\n\r\n\r\n(S,7)-(LAT,4)-(COH,3)-(MAR,8)\r\n\r\n\r\n0.99\r\n\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2022-01-26T16:08:21+01:00"
    },
    {
      "path": "UnderConstruction.html",
      "title": "Under construction",
      "description": "... content will be added soon\n",
      "author": [],
      "contents": "\r\nThis site is under construction and will be fully working once the book is released. Currently, only a few sub-pages of chapter 2 are fully functional. Additional material will be added within the next weeks.\r\n\r\n\r\n\r\n",
      "last_modified": "2022-01-26T16:08:21+01:00"
    }
  ],
  "collections": []
}
